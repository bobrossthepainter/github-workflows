name: GHCR Build & Publish

on:
  workflow_call:
    inputs:
      container-file:
        description: "container file path. E.g. ./Dockerfile"
        required: false
        type: string
        default: ./Dockerfile
      container-file-context:
        description: "build context path. E.g. '.'"
        required: false
        type: string
        default: .
      container-registry:
        description: "Registry to push the container to. E.g. ghcr.io"
        required: false
        type: string
        default: ghcr.io
      container-repository:
        description: "Repository to push the container to. E.g. bobrossthepainter/some-repo"
        required: false
        type: string
      multi-arch:
        description: "Specifies architectures for image. E.g. amd64,arm64"
        required: false
        type: string
    secrets:
      container-registry-user:
        description: "Registry user."
        required: false
      container-registry-token:
        description: "Registry token."
        required: false
      container-build-args:
        description: "Optional build args in the format of 'ARG_NAME1=ARG_VALUE1\\nARG_NAME2=ARG_VALUE2'."
        required: false

env:
  CONTAINER_REGISTRY: ${{ inputs.container-registry }}

jobs:
  build:
    name: Build
    runs-on: [ubuntu-latest]

    # If the PR is coming from a fork (pull_request_target), ensure it's opened by "dependabot[bot]".
    # Otherwise, clone it normally.
    if: |
      (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]') ||
      (github.event_name != 'pull_request_target' && github.actor != 'dependabot[bot]')
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.sha || '' }}

      - name: Resolve Registry attributes
        run: |
          INPUT=${{ inputs.container-repository }}
          CONTAINER_REPOSITORY="${INPUT:-${{ github.repository }}}"
          echo CONTAINER_REPOSITORY=$CONTAINER_REPOSITORY >> $GITHUB_ENV

          INPUT=${{ secrets.container-registry-user }}
          CONTAINER_REGISTRY_USER="${INPUT:-${{ github.actor }}}"
          echo CONTAINER_REGISTRY_USER=$CONTAINER_REGISTRY_USER >> $GITHUB_ENV

          INPUT=${{ secrets.container-registry-token }}
          CONTAINER_REGISTRY_TOKEN="${INPUT:-${{ secrets.GITHUB_TOKEN }}}"
          echo CONTAINER_REGISTRY_TOKEN=$CONTAINER_REGISTRY_TOKEN >> $GITHUB_ENV

      - name: Map target architectures
        if: ${{ inputs.multi-arch != '' }}
        run: |
          RESULTING_ARCHS=""
          ARCHS=${{ inputs.multi-arch }}
          for arch in ${ARCHS//,/ }
          do
            if [ -z "$ARCHS" ]; then
              RESULTING_ARCHS="${arch##*/}"
            else
              RESULTING_ARCHS="$RESULTING_ARCHS,${arch##*/}"
            fi
            echo "discovered arch $arch"
          done
          echo LINUX_PLATFORMS=$RESULTING_ARCHS >> $GITHUB_ENV

      - name: Set up QEMU
        if: ${{ inputs.multi-arch != '' }}
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{ env.LINUX_PLATFORMS }}

      - name: Set up Docker Buildx
        if: ${{ inputs.multi-arch != '' }}
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug
          driver-opts: image=moby/buildkit:latest

      - name: GHCR login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ env.CONTAINER_REGISTRY_USER }}
          password: ${{ env.CONTAINER_REGISTRY_TOKEN }}

      # - name: print secret
      #   run: |
      #     echo ${{secrets.container-build-args}} | sed 's/./& /g'

      - name: Docker - metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_REPOSITORY }}
          tags: |
            type=raw,priority=200,value={{branch}}{{tag}}-{{date 'YYYYMMDD'}}-{{sha}},enable=${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
            type=ref,priority=100,event=tag
            type=ref,priority=100,event=branch
            type=ref,priority=100,event=pr,suffix=-{{date 'YYYYMMDD'}}-{{sha}}

      - name: Docker - build and push
        uses: docker/build-push-action@v3
        with:
          platforms: ${{ inputs.multi-arch }}
          context: ${{ inputs.container-file-context }}
          file: ${{ inputs.container-file }}
          pull: true
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ${{ secrets.container-build-args }}
